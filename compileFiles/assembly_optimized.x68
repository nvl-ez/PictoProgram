	ORG 	$0
START:
	MOVE.B #0, D1
	MOVE.W #12, D0
	TRAP #15
	MOVE.L A6, -8(A7)
	MOVE.L A7, A6
	JSR main * ----FUNCTION CALL:CALL(--, --, main)----

	SIMHALT *HALT(--, --, --)
e1: *e1: SKIP
	SUB.L #8, SP *:PMB(--, --, f0)

* ----COPY:COPY(0, --, t2)----
	MOVE.L #-10, A5
	ADD.L A6, A5
	MOVE.W #0, (A5)
e2: *e2: SKIP
* ----COMPARE LT:IFLT(t2, t0, e3)----
	MOVE.L #-10, A5
	ADD.L A6, A5
	MOVE.W (A5), D1
	MOVE.L #0, A5
	ADD.L A6, A5
	MOVE.W (A5), D2
	CMP.W D2, D1
	BLT.W e3

* ----COPY:COPY(0, --, t4)----
	MOVE.L #-12, A5
	ADD.L A6, A5
	MOVE.W #0, (A5)

	JMP e4 * ----GOTO:GOTO(--, --, e4)----

e3: *e3: SKIP
* ----COPY:COPY(-1, --, t4)----
	MOVE.L #-12, A5
	ADD.L A6, A5
	MOVE.W #-1, (A5)

e4: *e4: SKIP
* ----COMPARE EQ:IFEQ(t4, 0, e5)----
	MOVE.L #-12, A5
	ADD.L A6, A5
	MOVE.W (A5), D1
	MOVE.W #0, D2
	CMP.W D1, D2
	BEQ.W e5

* ----POS:POS(0, t2, --)----
	MOVE.B #0, D5
	LSL.W #8, D5
	MOVE.L #-10, A5
	ADD.L A6, A5
	MOVE.B 1(A5), D5
	MOVE.W D5, D1
	MOVE.W #11, D0
	TRAP #15
* ----WRITE:WRITE(0, 10, t1)----
	MOVE.W #0, D2
	MOVE.W #10, D3
	MOVE.L #2, A5
	ADD.L A6, A5
	SUB.W D2, D3
	LSL.W #1, D2
	ADD.W D2, A5
	MOVE.W #6, D0
WRITE_LOOP_1:
	MOVE.W (A5)+, D1
	TRAP #15
	DBF D3, WRITE_LOOP_1

* ----INCREMENT LOCAL VARIABLE:INC(--, --, t2)----
	MOVE.L #-10, A5
	ADD.L A6, A5
	ADD.W #1, (A5)

	JMP e2 * ----GOTO:GOTO(--, --, e2)----

e5: *e5: SKIP
* ----RETURN:RTN(--, --, --)----
	MOVE.L A6, A7
	SUB.L #4, A7
	MOVE.L -8(A6), A6
	RTS

main: *main: SKIP
	SUB.L #518, SP *:PMB(--, --, f1)

* ----SET VALUE FROM INDIRECTION:IND_ASS(72, 0, t9)----
	MOVE.L #-520, A5
	ADD.L A6, A5
	MOVE.W #0, D1
	MULU.W #2, D1
	EXT.L D1
	ADD.L D1, A5
	MOVE.W #72, (A5)
* ----SET VALUE FROM INDIRECTION:IND_ASS(101, 1, t9)----
	MOVE.L #-520, A5
	ADD.L A6, A5
	MOVE.W #1, D1
	MULU.W #2, D1
	EXT.L D1
	ADD.L D1, A5
	MOVE.W #101, (A5)
* ----SET VALUE FROM INDIRECTION:IND_ASS(108, 2, t9)----
	MOVE.L #-520, A5
	ADD.L A6, A5
	MOVE.W #2, D1
	MULU.W #2, D1
	EXT.L D1
	ADD.L D1, A5
	MOVE.W #108, (A5)
* ----SET VALUE FROM INDIRECTION:IND_ASS(108, 3, t9)----
	MOVE.L #-520, A5
	ADD.L A6, A5
	MOVE.W #3, D1
	MULU.W #2, D1
	EXT.L D1
	ADD.L D1, A5
	MOVE.W #108, (A5)
* ----SET VALUE FROM INDIRECTION:IND_ASS(111, 4, t9)----
	MOVE.L #-520, A5
	ADD.L A6, A5
	MOVE.W #4, D1
	MULU.W #2, D1
	EXT.L D1
	ADD.L D1, A5
	MOVE.W #111, (A5)
* ----SET VALUE FROM INDIRECTION:IND_ASS(32, 5, t9)----
	MOVE.L #-520, A5
	ADD.L A6, A5
	MOVE.W #5, D1
	MULU.W #2, D1
	EXT.L D1
	ADD.L D1, A5
	MOVE.W #32, (A5)
* ----SET VALUE FROM INDIRECTION:IND_ASS(87, 6, t9)----
	MOVE.L #-520, A5
	ADD.L A6, A5
	MOVE.W #6, D1
	MULU.W #2, D1
	EXT.L D1
	ADD.L D1, A5
	MOVE.W #87, (A5)
* ----SET VALUE FROM INDIRECTION:IND_ASS(111, 7, t9)----
	MOVE.L #-520, A5
	ADD.L A6, A5
	MOVE.W #7, D1
	MULU.W #2, D1
	EXT.L D1
	ADD.L D1, A5
	MOVE.W #111, (A5)
* ----SET VALUE FROM INDIRECTION:IND_ASS(114, 8, t9)----
	MOVE.L #-520, A5
	ADD.L A6, A5
	MOVE.W #8, D1
	MULU.W #2, D1
	EXT.L D1
	ADD.L D1, A5
	MOVE.W #114, (A5)
* ----SET VALUE FROM INDIRECTION:IND_ASS(108, 9, t9)----
	MOVE.L #-520, A5
	ADD.L A6, A5
	MOVE.W #9, D1
	MULU.W #2, D1
	EXT.L D1
	ADD.L D1, A5
	MOVE.W #108, (A5)
* ----SET VALUE FROM INDIRECTION:IND_ASS(100, 10, t9)----
	MOVE.L #-520, A5
	ADD.L A6, A5
	MOVE.W #10, D1
	MULU.W #2, D1
	EXT.L D1
	ADD.L D1, A5
	MOVE.W #100, (A5)
* ----COPY LOCAL VARIABLE ON THE STACK:PUT(--, --, t9)----
	MOVE.L #255, D6
	MOVE.L #-8, A5
	ADD.L A6, A5
MOVE_LOOP_t9_2:
	MOVE.W -(A5), -(A7)
	DBF D6, MOVE_LOOP_t9_2

* ----COPY:COPY(2, --, t32)----
	MOVE.L #-522, A5
	ADD.L A6, A5
	MOVE.W #2, (A5)

* ----COPY LOCAL VARIABLE ON THE STACK:PUT(--, --, t32)----
	MOVE.L #0, D6
	MOVE.L #-520, A5
	ADD.L A6, A5
MOVE_LOOP_t32_2:
	MOVE.W -(A5), -(A7)
	DBF D6, MOVE_LOOP_t32_2

	MOVE.L A6, -8(A7)
	MOVE.L A7, A6
	JSR e1 * ----FUNCTION CALL:CALL(--, --, f0)----

* ----POP:POP(f0, --, --)----
	ADD.L #514, A7

	SIMHALT *HALT(--, --, --)
	END START
